name: Build & Release (Windows - MSYS2)

on:
  workflow_dispatch:
  push:
    tags: [ 'v*' ]

jobs:
  win-mingw:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # MSYS2 + MinGW64 + SFML + tools
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-sfml
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            ntldd-git

      # Configure & build (MinGW64)
      - name: Configure (Ninja, Release)
        shell: msys2 {0}
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc \
            -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++

      - name: Build
        shell: msys2 {0}
        run: cmake --build build --config Release

      # Collect ALL required DLLs using ntldd (recursive)
      - name: Package (auto-copy deps)
        shell: msys2 {0}
        run: |
          set -e
          DIST="dist"; mkdir -p "$DIST"
          cp -v build/whiteboard.exe "$DIST/"

          # List all dependent DLLs and copy them next to the EXE
          ntldd -R -L "$DIST/whiteboard.exe" | awk '/=> \// {print $3}' | while read -r dll; do
            echo "Copy: $dll"
            cp -v "$dll" "$DIST/" || true
          done

          # Zip it
          echo "Double-click whiteboard.exe to run." > "$DIST/README.txt"
          7z a -tzip whiteboard-windows.zip "$DIST"/*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: whiteboard-windows
          path: whiteboard-windows.zip

      - name: Release (tag only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: whiteboard-windows.zip
