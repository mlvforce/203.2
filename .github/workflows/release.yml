name: Build & Release (Windows - MSYS2)

on:
  workflow_dispatch:
  push:
    tags: [ 'v*' ]   # optional: publish a Release when you push a tag like v1.0.0

jobs:
  win-mingw:
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install MSYS2 + MinGW64 toolchain + SFML + CMake + Ninja
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-sfml
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja

      # Configure + build using MinGW64 (no vcpkg required)
      - name: Configure (Ninja, Release)
        shell: msys2 {0}
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc \
            -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++

      - name: Build
        shell: msys2 {0}
        run: cmake --build build --config Release

      # Package EXE + needed DLLs from Mingw64 bin
      - name: Package
        shell: bash
        run: |
          set -e
          DIST="dist"
          mkdir -p "$DIST"
          cp -v build/whiteboard.exe "$DIST"/

          # Gather SFML and common runtime dlls
          BIN="/mingw64/bin"
          cp -v $BIN/libsfml-*-2.dll "$DIST"/ || true
          cp -v $BIN/libfreetype-6.dll "$DIST"/ || true
          cp -v $BIN/libjpeg-8.dll "$DIST"/ || true
          cp -v $BIN/zlib1.dll "$DIST"/ || true
          cp -v $BIN/libbz2-1.dll "$DIST"/ || true
          cp -v $BIN/libopenal-1.dll "$DIST"/ || true
          cp -v $BIN/libstdc++-6.dll "$DIST"/ || true
          cp -v $BIN/libgcc_s_seh-1.dll "$DIST"/ || true
          cp -v $BIN/libwinpthread-1.dll "$DIST"/ || true

          printf "Double-click whiteboard.exe to run.\n" > "$DIST/README.txt"
          7z a -tzip whiteboard-windows.zip "$DIST"/*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: whiteboard-windows
          path: whiteboard-windows.zip

      # Optional: publish a GitHub Release if you pushed a tag vX.Y.Z
      - name: Release (tag only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: whiteboard-windows.zip
